package app.seleniumap.ui.views;

import lombok.Data;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

@Data
public class FeatureListItem {
    private JPanel mainPanel;
    private JLabel lblSequence;
    private JLabel lblDescription;
    private JLabel lblpath;
    private JLabel lblName;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new BorderLayout(0, 0));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        panel1.setOpaque(false);
        mainPanel.add(panel1, BorderLayout.CENTER);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridBagLayout());
        panel2.setMinimumSize(new Dimension(78, 78));
        panel2.setOpaque(false);
        panel2.setPreferredSize(new Dimension(78, 78));
        panel1.add(panel2, BorderLayout.WEST);
        lblSequence = new JLabel();
        Font lblSequenceFont = this.$$$getFont$$$(null, Font.BOLD | Font.ITALIC, 36, lblSequence.getFont());
        if (lblSequenceFont != null) lblSequence.setFont(lblSequenceFont);
        lblSequence.setHorizontalAlignment(0);
        lblSequence.setHorizontalTextPosition(0);
        lblSequence.setOpaque(false);
        lblSequence.setPreferredSize(new Dimension(78, 78));
        lblSequence.setText("99");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel2.add(lblSequence, gbc);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new BorderLayout(0, 0));
        panel3.setOpaque(false);
        panel1.add(panel3, BorderLayout.CENTER);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new BorderLayout(0, 0));
        panel4.setOpaque(false);
        panel3.add(panel4, BorderLayout.SOUTH);
        lblName = new JLabel();
        lblName.setOpaque(false);
        lblName.setText("Label");
        panel4.add(lblName, BorderLayout.SOUTH);
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new BorderLayout(0, 0));
        panel5.setOpaque(false);
        panel3.add(panel5, BorderLayout.CENTER);
        lblDescription = new JLabel();
        Font lblDescriptionFont = this.$$$getFont$$$(null, Font.BOLD, 16, lblDescription.getFont());
        if (lblDescriptionFont != null) lblDescription.setFont(lblDescriptionFont);
        lblDescription.setOpaque(false);
        lblDescription.setText("Label");
        panel5.add(lblDescription, BorderLayout.CENTER);
        lblpath = new JLabel();
        lblpath.setText("Label");
        mainPanel.add(lblpath, BorderLayout.SOUTH);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
